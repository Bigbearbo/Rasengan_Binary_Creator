/*
RSB荣誉墙编码:
01100010011010010110011101100010011001010110000101110010011000100110111111100101101001001010011111100111100001101000101011100101101011111011011010000000010101110110000101111001011011100110010101001100011010010110111010000
*/
#include <iostream>
#include <bitset>
#include <vector>

// 全局变量：贡献者名单
std::vector<std::string> contributors = {
    "bigbearbo大熊寶",  // 核心贡献者 → 标记10 000
    "WayneLin",    // 普通贡献者 → 标记10 111

};

// RSB编码生成器
std::string encodeRSB(const std::string& name, bool isCore) {
    std::string binaryName;
    
    // 中间层：人名转ASCII二进制
    for (char c : name) {
        binaryName += std::bitset<8>(c).to_string();
    }
    
    // 第三层：贡献者标签 (10 + 000/111)
    std::string tag = isCore ? "10000" : "10111";
    
    return binaryName + tag; // 组合：人名二进制 + 标签层
}

int main() {
    // 第一层：用000连接所有贡献者编码
    std::string fullCode;
    
    for (size_t i = 0; i < contributors.size(); ++i) {
        bool isCore = (i < 2); // 前两人是核心
        std::string personCode = encodeRSB(contributors[i], isCore);
        
        if (!fullCode.empty()) {
            fullCode += "000"; // 第一层断词符
        }
        fullCode += personCode;
    }
    
    // 输出结果
    std::cout << "RSB荣誉墙编码:\n" << fullCode << std::endl;
    
    return 0;
}
